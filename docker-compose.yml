version: '3.8'
services:
  auth-service:
    build:
      context: ./apps/auth-service
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
    depends_on:
      - redis
      - postgres

  donation-service:
    build:
      context: ./apps/donation-service
    container_name: donation-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    depends_on:
      - redis
      - postgres

  notification-service:
    build:
      context: ./apps/notification-service
    container_name: notification-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
    depends_on:
      - redis

  payment-service:
    build:
      context: ./apps/payment-service
    container_name: payment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
    depends_on:
      - redis
      - postgres

  user-service:
    build:
      context: ./apps/user-service
    container_name: user-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
    depends_on:
      - redis
      - postgres

  gateway:
    build:
      context: ./gateway
    container_name: gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    depends_on:
      - auth-service
      - donation-service
      - notification-service
      - payment-service
      - user-service

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
